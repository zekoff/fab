// FAB Firestore Security Rules

rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        // Get account data for currently signed-in user
        function getAccountData() {
            return get(/databases/$(database)/documents/accounts/$(request.auth.uid)).data;
        }

        // Check that user is member of family path match
        function isFamilyMember(familyFirestoreId) {
            return request.auth != null && getAccountData().familyFirestoreId == familyFirestoreId;
        }

        // Read access to self account details
        match /accounts/{accountFirestoreId} {
            allow read: if request.auth != null && request.auth.uid == accountFirestoreId;
        }

        // Read and write access to user's family data
        match /families/{familyFirestoreId} {
            allow read, write: if isFamilyMember(familyFirestoreId);
        }

        // Read and write access to avatars in a family
        match /avatars/{avatarFirestoreId} {
            allow read, write: if request.auth != null &&
                get(/databases/$(database)/documents/avatars/$(avatarFirestoreId)).data
                .familyFirestoreId == request.auth.familyFirestoreId;
        }

        // Read access to all generic items for any user
        match /itemDefinitions/{document=**} {
            allow read: if request.auth!= null;
        }
    }
}