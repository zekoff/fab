// FAB Firestore Security Rules

rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {

        // Read access to self account details
        match /accounts/{accountId} {
            allow read: if request.auth != null && request.auth.uid == accountId;
        }

        // Get account data for currently signed-in user
        function getAccountData() {
            return get(/databases/$(database)/documents/accounts/$(request.auth.uid)).data;
        }

        // Check that user is member of family path match
        function isFamilyMember(familyId) {
            return request.auth != null && getAccountData().familyId == familyId;
        }

        // // Check that user is associated with avatar path match (currently unused)
        // function isAvatarOwner(avatarId) {
        //     return request.auth != null && getAccountData().avatarId == avatarId;
        // }

        // // Check that user is a family admin (currently unused)
        // function isFamilyAdmin(familyId) {
        //     return request.auth != null &&
        //         isFamilyMember(familyId) &&
        //         getAccountData().familyAdmin
        // }

        // Read and write access to user's family data
        match /families/{familyId} {
            allow read, write: if isFamilyMember(familyId);

            // Any family avatar can read all family avatar info
            match /avatars/{document=**} {
                allow read, write: if isFamilyMember(familyId);
            }

            // Any family avatar can read and write family quests
            match /availableQuests/{document=**} {
                allow read, write: if isFamilyMember(familyId);
            }

            // Any family avatar can read/write recent achievements
            match /recentAchievements/{document=**} {
                allow read, write: if isFamilyMember(familyId);
            }

        }

        // Read access to all generic items for any user
        match /items/{document=**} {
            allow read: if request.auth!= null;
        }
    }
}